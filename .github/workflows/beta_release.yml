name: beta release

on:
  push:
    branches: [ 'main' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  release:
    strategy:
      matrix:
        include:
          - target: '!(*musl*|*windows-arm64*|*android*|*freebsd*)' # xgo
            hash: "md5"
          - target: 'linux-!(arm*)-musl*' #musl-not-arm
            hash: "md5-linux-musl"
          - target: 'linux-arm*-musl*' #musl-arm
            hash: "md5-linux-musl-arm"
          - target: 'windows-arm64' #win-arm64
            hash: "md5-windows-arm64"
          - target: 'android-*' #android
            hash: "md5-android"
          - target: 'freebsd-*' #freebsd
            hash: "md5-freebsd"

    name: Beta Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Setup web
        run: bash build.sh dev web

      - name: Build
        uses: go-cross/cgo-actions@454cfd6d20816878926b0253ca8f2dbbd2f7d731 # V1.1.0
        with:
          targets: ${{ matrix.target }}
          musl-target-format: $os-$musl-$arch
          out-dir: build
          output: openlist-$target$ext
          musl-base-url: "https://github.com/OpenListTeam/musl-compilers/releases/latest/download/"
          x-flags: |
            github.com/alist-org/alist/v3/internal/conf.BuiltAt=$built_at
            github.com/alist-org/alist/v3/internal/conf.GitAuthor=OpenList
            github.com/alist-org/alist/v3/internal/conf.GitCommit=$git_commit
            github.com/alist-org/alist/v3/internal/conf.Version=$tag
            github.com/alist-org/alist/v3/internal/conf.WebVersion=dev
      - name: Compress
        run: |
          bash build.sh zip ${{ matrix.hash }}
      # See above           
      # - name: Upload assets
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: build/compress/*
      #     prerelease: true
      #     tag_name: beta

      - name: Clean illegal characters from matrix.target
        id: clean_target_name
        run: |
          ILLEGAL_CHARS_REGEX='[":<>|*?\\/\r\n]'
          CLEANED_TARGET=$(echo "${{ matrix.target }}" | sed -E "s/$ILLEGAL_CHARS_REGEX//g")
          echo "Original target: ${{ matrix.target }}"
          echo "Cleaned target: $CLEANED_TARGET"
          echo "cleaned_target=$CLEANED_TARGET" >> $GITHUB_ENV
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: beta builds for ${{ env.cleaned_target }}
          path: ${{ github.workspace }}/build/compress/*
          compression-level: 0
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
