name: build and re

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        target: 
          - darwin-amd64
          - darwin-arm64
          - windows-amd64
          - linux-arm64-musl
          - linux-amd64-musl
          - windows-arm64
          - android-arm64
    name: Build
    runs-on: ${{ matrix.platform }}
    outputs:
      artifacts: ${{ steps.upload.outputs.artifact-paths }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Setup web
        run: bash build.sh dev web

      - name: Build
        uses: go-cross/cgo-actions@v1
        with:
          targets: ${{ matrix.target }}
          musl-target-format: $os-$musl-$arch
          out-dir: build
          x-flags: |
            github.com/alist-org/alist/v3/internal/conf.BuiltAt=$built_at
            github.com/alist-org/alist/v3/internal/conf.GitAuthor=Xhofe
            github.com/alist-org/alist/v3/internal/conf.GitCommit=$git_commit
            github.com/alist-org/alist/v3/internal/conf.Version=$tag
            github.com/alist-org/alist/v3/internal/conf.WebVersion=dev

      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: openlist_${{ steps.short-sha.outputs.sha }}_${{ matrix.target }}
          path: build/*
        # 设置输出以便后续作业使用
        run: |
          echo "artifact-paths=openlist_${{ steps.short-sha.outputs.sha }}_${{ matrix.target }}" >> $GITHUB_OUTPUT

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Generate UTC timestamp
        id: timestamp
        run: |
          UTC_TIME=$(date -u +'%Y-%m-%dT%H:%M')
          TAG_NAME=$(date -u +'build-%Y%m%d-%H%M')
          echo "date=$UTC_TIME" >> $GITHUB_OUTPUT
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.timestamp.outputs.tag }}
          name: "Build @ ${{ steps.timestamp.outputs.date }} UTC"
          body: |
            Automated build release
            - Generated at **${{ steps.timestamp.outputs.date }} UTC**
          draft: false
          prerelease: false
          files: |
            artifacts/*/*

      - name: Show release URL
        run: echo "Release created at ${{ steps.create_release.outputs.url }}"
